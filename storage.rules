rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // âœ… Correct admin check from users/{uid}
    function isAdmin() {
      return request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Product images
    match /product-images/{fileId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if isAdmin();
    }

    // Review images
    match /review-images/{fileId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if isAdmin();
    }

    // Recipe images
    match /recipe-images/{fileId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if isAdmin() || request.auth != null;
    }

    // Chat images
    match /chat-images/{fileId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if isAdmin();
    }

    // Fallback: allow admins to delete anything else
    match /{allPaths=**} {
      allow delete: if isAdmin();
    }
  }
}